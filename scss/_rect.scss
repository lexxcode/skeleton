// @public: function for get $particle object for draw rect
//
// @param: $color
// @param: $width
// @param: $height
// @param: $x: 0
// @param: $y: 0
// @param: $radius: null
//
// @return: Formated map of backgrounds
@function skeleton-rect(
    $color,
    $width,
    $height,
    $x: 0,
    $y: 0,
    $radius: null,
    $clip: border-box
) {
    $result: ();

    @if not $radius or $radius == 0 {
        $result: (
            $clip linear-gradient($color, $color) #{$x} #{$y} / #{$width} #{$height},
        );
    }

    @else {
        $result: (
            $clip radial-gradient(circle closest-side at #{$radius} #{$radius}, $color #{$radius}, transparent 0) #{$x} #{$y} / #{$width} #{$height},
            $clip radial-gradient(circle closest-side at calc(100% - #{$radius}) #{$radius}, $color #{$radius}, transparent 0) #{$x} #{$y} / #{$width} #{$height},
            $clip radial-gradient(circle closest-side at #{$radius} calc(100% - #{$radius}), $color #{$radius}, transparent 0) #{$x} #{$y} / #{$width} #{$height},
            $clip radial-gradient(circle closest-side at calc(100% - #{$radius}) calc(100% - #{$radius}), $color #{$radius}, transparent 0) #{$x} #{$y} / #{$width} #{$height},
            $clip linear-gradient(90deg, transparent #{$radius}, $color #{$radius}, $color calc(100% - #{$radius}), transparent calc(100% - #{$radius})) #{$x} #{$y} / #{$width} #{$height},
            $clip linear-gradient(0deg, transparent #{$radius}, $color #{$radius}, $color calc(100% - #{$radius}), transparent calc(100% - #{$radius})) #{$x} #{$y} / #{$width} #{$height}
        );
    }

    @return $result;
}
